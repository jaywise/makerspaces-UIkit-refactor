// Hooking up UIkit Sass ----------------------------------------------

// 1. Your custom variables and variable overwrites.
$text-color-primary: hsla(111, 30%, 21%, 1);
$text-color-secondary: hsla(30, 96%, 52%, 1.0);
$background-color-primary: #eaeaea;
$accent-color: hsla(30, 96%, 52%, 1.0);
$button-color: grey;

$primary-font: 'Days One', Arial;
$secondary-font: 'ZCOOL QingKe HuangYou', sans-serif;
$accent-font: 'Federo', sans-serif;
$body-font: 'David Libre', cursive;

$breakpoint-small: 650px;
$divider-icon-line-width: 90%;

// 2. Import default variables and available mixins.
@import "variables-theme.scss";
@import "mixins-theme.scss";

// 3. Your custom mixin overwrites.
@mixin hook-modal-full() { opacity: 0.8; }
@mixin hook-modal-close-default() { background-color: #EFC2B9; opacity: 0.8;}

// 4. Import UIkit.
@import "uikit-theme.scss";



// My custom Sass ------------------------------------------------

@import "file-management/variables";
@import "file-management/mixins";
@import "file-management/functions";
@import "file-management/mobile";
@import "file-management/mixins";

@import url('https://fonts.googleapis.com/css?family=David+Libre|Federo|Days+One|ZCOOL+QingKe+HuangYou');

/*type-scale for root (desktop)
sets default (ie root), but can be overridden for mobile if fontScale is modified */
:root {
  --fontBaseSize: 20px;
  --fontScale: 1.25;
}
/* modular scaling based upon unit of fontScale variable*/
p{
    font-size: var(--fontBaseSize);
  }
h5 {
    font-size: calc(var(--fontBaseSize) * var(--fontScale));
  }
h4 {
    font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale));
  }         
h3 {
    font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale) * var(--fontScale));
  }
h2 {
    font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale) * var(--fontScale) * var(--fontScale));
  }
h1 {
    font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale) * var(--fontScale) * var(--fontScale) * var(--fontScale));
  }

body{
    margin: 0 auto;
    max-width: var(--bodyMaxWidth, 80em); 
}

a {
  text-decoration: none;
  &:hover{
      text-decoration: none;
      color:grey;
  }
  &.selected-link{
    color: approach-half-neutral($accent-color);
  }
}

.grid-sub-page {  
  article{
    flex-direction: column;
  }
  article.grid-text {
      h3{
        font-family: $accent-font;
        color: approach-half-neutral($accent-color);
      }
  }
}

%grid-sub-container {
  display: flex;
  align-items: center;
  justify-content: center;
}

header {
  h3 a {
    color: $text-color-primary;
    font-family: $primary-font;
  }
}

.grid-text {
  p{
    color: $text-color-primary;
    font-family: $body-font;
  }
  padding: var(--textPadding, 30px);
}

picture {
  @extend %grid-sub-container;
  flex-flow: row wrap;
  justify-content: space-around;
  &.img-large img{
    max-width: 100;
    padding: 10px;
  }
}

footer {
  @extend %grid-sub-container;
  p {
  font-family: $accent-font;
  }
}


//mobile ---------------------------------------------------

@media screen and (max-width: $breakpoint-small){   

  /* sets scales and padding for mobile; calcultions occur in class declaration*/
  body{
    --mobileScaleIndex: 0.5; 
    --fontBaseSize: 16px; 
    --bodyMaxWidth: 40em; 
    --bodyPadding: 0em;  
  }
  p {
    padding: 10px;
  }

  .grid-text{
    margin: 15px;
  }

  /* if mobile is long enough, style the footer to be detached */
  @media screen and (min-height: 500px){
    .grid-landing-page footer {
      margin: 30px;
    }
  }
}





